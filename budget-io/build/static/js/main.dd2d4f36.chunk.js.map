{"version":3,"sources":["reducers/expense.js","reducers/filters.js","actions/expenses.js","components/ExpenseListItem.js","selectors/expenses.js","components/ExpenseList.js","actions/filters.js","components/ExpenseListFilters.js","components/Home.js","components/Form.js","components/Create.js","components/Help.js","components/Edit.js","components/NotFound.js","components/Header.js","App.js","index.js","store/storeSetup.js"],"names":["expensesReducer","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","expense","filter","_ref","id","map","objectSpread","updates","filtersReducerDefaultState","text","sortBy","startDate","moment","startOf","endDate","endOf","filters","removeExpense","connect","dispatch","description","amount","createdAt","react_default","a","createElement","react_router_dom","to","onClick","selectors_expenses","expenses","createdAtMoment","startDateMatch","isSameOrBefore","endDateMatch","textMatch","toLowerCase","includes","sort","b","selectExpenses","props","components_ExpenseListItem","assign","key","setStartDate","setEndDate","ExpenseListFilters","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDatesChange","onFocusChange","calendarFocused","setState","_this2","value","onChange","e","setTextFilter","target","react_dates","startDateId","endDateId","focusedInput","showClearDates","numberOfMonths","isOutsideRange","React","Component","Home","components_ExpenseListFilters","components_ExpenseList","Form","onDescriptionChange","persist","onNoteChange","note","onAmountChange","match","onDateChange","onFocusedChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","placeholder","autoFocus","date","components_Form","_ref$description","_ref$note","_ref$amount","_ref$createdAt","uuid","addExpense","history","push","Help","find","params","NotFound","Header","exact","activeClassName","App","className","components_Header","react_router","path","component","Create","Edit","store","createStore","combineReducers","filtersReducer","window","__REDUX_DEVTOOLS_EXTENSION__","app","es","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd2d4f36.chunk.js","sourcesContent":["const expensesReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'ADD_EXPENSE':\r\n        return [\r\n            ...state,\r\n            action.expense\r\n        ];\r\n        case 'REMOVE_EXPENSE':\r\n            return state.filter(({ id }) => id !== action.id);\r\n        case 'EDIT_EXPENSE':\r\n            return state.map((expense) => {\r\n                if (expense.id === action.id) {\r\n                    return {\r\n                        ...expense,\r\n                        ...action.updates\r\n                    };\r\n                } else {\r\n                    return expense;\r\n                };\r\n            });\r\n        default:\r\n            return state;\r\n    }   \r\n}\r\n\r\nexport default expensesReducer;","import moment from 'moment';\r\n\r\nconst filtersReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'date',\r\n    startDate: moment().startOf('month'),\r\n    endDate: moment().endOf('month')\r\n};\r\n\r\nexport default (state = filtersReducerDefaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_FILTER':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case 'SORT_BY_AMOUNT':\r\n            return {\r\n                ...state,\r\n                sortBy: 'amount'\r\n            };\r\n        case 'SORT_BY_DATE':\r\n            return {\r\n                ...state,\r\n                sortBy: 'date'\r\n            };\r\n        case 'SET_START_DATE':\r\n            return {\r\n                ...state,\r\n                startDate: action.startDate\r\n            };\r\n        case 'SET_END_DATE':\r\n            return {\r\n                ...state,\r\n                endDate: action.endDate\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import uuid from 'uuid';\r\n\r\nexport const addExpense = (\r\n    {\r\n        description = '',\r\n        note = '',\r\n        amount = 0,\r\n        createdAt = 0\r\n    } = {}\r\n) => ({\r\n    type: 'ADD_EXPENSE',\r\n    expense: {\r\n        id: uuid(),\r\n        description,\r\n        note,\r\n        amount,\r\n        createdAt\r\n    }\r\n});\r\n\r\nexport const removeExpense = ({ id } = {}) => ({\r\n    type: 'REMOVE_EXPENSE',\r\n    id\r\n});\r\n\r\nexport const editExpense = (id, updates) => ({\r\n    type: 'EDIT_EXPENSE',\r\n    id,\r\n    updates\r\n})","import React from 'react';\r\nimport { removeExpense } from '../actions/expenses';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ExpenseListItem = ({ id, dispatch, description, amount, createdAt }) => (\r\n  <div>\r\n    <h3>{description}</h3>\r\n    <p>{amount} - {createdAt}</p>\r\n    <Link to={`/edit/${id}`}>\r\n      <button>Edit</button>\r\n    </Link>\r\n    <button onClick={() => {\r\n      dispatch(removeExpense({ id }))}}>Remove</button>\r\n  </div>\r\n)\r\n\r\nexport default connect()(ExpenseListItem);","import moment from 'moment';\r\n\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n  return expenses.filter((expense) => {\r\n    const createdAtMoment = moment(expense.createdAt);\r\n    const startDateMatch = startDate ? startDate.isSameOrBefore(createdAtMoment, 'day') : true;\r\n    const endDateMatch = endDate ? endDate.isSameOrBefore(createdAtMoment, 'day') : true;\r\n    const textMatch = expense.description.toLowerCase().includes(text.toLowerCase());\r\n\r\n    return startDateMatch && endDateMatch && textMatch;\r\n  }).sort((a, b) => {\r\n    if (sortBy === 'date') {\r\n      return a.createdAt < b.createdAt ? 1 : -1;\r\n    } else if (sortBy === 'amount') {\r\n      return a.amount < b.amount ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n","import React from 'react';\r\nimport ExpenseListItem from './ExpenseListItem';\r\nimport { connect } from 'react-redux';\r\nimport selectExpenses from '../selectors/expenses';\r\n\r\nconst ExpenseList = (props) => (\r\n  <div>\r\n    <h1>Expense List</h1>\r\n    {\r\n      props.expenses.length === 0 ? (\r\n        <div>\r\n          <span>No Expenses</span>\r\n        </div>\r\n      ) : (\r\n        props.expenses.map((expense) => {\r\n          return <ExpenseListItem key={expense.id} {...expense} />\r\n        })\r\n      )\r\n    }\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expenses: selectExpenses(state.expenses, state.filters)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseList);","export const setTextFilter = (text = '') => ({\r\n    type: 'SET_TEXT_FILTER',\r\n    text\r\n});\r\n\r\nexport const sortByDate = () => ({\r\n    type: 'SORT_BY_DATE'\r\n});\r\n\r\nexport const sortByAmount = () => ({\r\n    type: 'SORT_BY_AMOUNT'\r\n});\r\n\r\nexport const setStartDate = (startDate) => ({\r\n    type: 'SET_START_DATE',\r\n    startDate\r\n});\r\n\r\nexport const setEndDate = (endDate) => ({\r\n    type: 'SET_END_DATE',\r\n    endDate\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport { \r\n  setTextFilter, \r\n  sortByAmount, \r\n  sortByDate,\r\n  setStartDate,\r\n  setEndDate\r\n} from '../actions/filters';\r\n\r\nclass ExpenseListFilters extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      calendarFocused: null\r\n    }\r\n  };\r\n\r\n  onDatesChange = ({ startDate, endDate }) => {\r\n    this.props.dispatch(setStartDate(startDate));\r\n    this.props.dispatch(setEndDate(endDate));\r\n  };\r\n\r\n  onFocusChange = (calendarFocused) => {\r\n    this.setState(() => ({ calendarFocused }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          value={this.props.filters.text} \r\n          onChange={(e) => {\r\n          this.props.dispatch(setTextFilter(e.target.value))\r\n        }}/>\r\n        <select \r\n          value={this.props.filters.sortBy} \r\n          onChange={(e) => {\r\n            if (e.target.value === 'date') {\r\n              this.props.dispatch(sortByDate(e.target.value))\r\n            } else if (e.target.value === 'amount') {\r\n              this.props.dispatch(sortByAmount(e.target.value))\r\n            }\r\n        }}>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"amount\">\r\n            Amount\r\n          </option>\r\n        </select>\r\n        <DateRangePicker          \r\n          startDate={this.props.filters.startDate}\r\n          startDateId=\"start\"\r\n          endDate={this.props.filters.endDate}\r\n          endDateId=\"end\"\r\n          onDatesChange={this.onDatesChange}\r\n          focusedInput={this.state.calendarFocused}\r\n          onFocusChange={this.onFocusChange}\r\n          showClearDates={true}\r\n          numberOfMonths={1}\r\n          isOutsideRange={() => false}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filters: state.filters\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ExpenseListFilters)","import React, { Component } from 'react';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpenseListFilters from './ExpenseListFilters';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ExpenseListFilters />\r\n        <ExpenseList />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\n\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\n\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      description: props.expense ? props.expense.description : '',\r\n      note: props.expense ? props.expense.note : '',\r\n      amount: props.expense ? (props.expense.amount / 100).toString() : '',\r\n      createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n      focused: false,\r\n      error: ''\r\n    }\r\n  }\r\n\r\n  onDescriptionChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => ({ description: e.target.value }));\r\n  }\r\n\r\n  onNoteChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => ({ note: e.target.value }));\r\n  }\r\n\r\n  onAmountChange = (e) => {\r\n    e.persist();\r\n    if (!e.target.value || e.target.value.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n      this.setState(() => ({ amount: e.target.value }))\r\n    }\r\n  }\r\n\r\n  onDateChange = (createdAt) => {\r\n    if (createdAt) {\r\n      this.setState(() => ({ createdAt }))   \r\n    }\r\n  }\r\n\r\n  onFocusedChange = ({ focused }) => {\r\n    this.setState(() => ({ focused: focused }))\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!this.state.description || !this.state.amount) {\r\n      this.setState(() => ({ error: 'Please provide description and amount.' }));\r\n    } else {\r\n      this.setState(() => ({ error: ''}));\r\n      this.props.onSubmit({\r\n        description: this.state.description,\r\n        amount: parseFloat(this.state.amount, 10) * 100,\r\n        createdAt: this.state.createdAt.valueOf(),\r\n        note: this.state.note\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && <p>{this.state.error}</p>}\r\n        <form onSubmit={this.onSubmit}>\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            autoFocus\r\n            value={this.state.description}\r\n            onChange={this.onDescriptionChange}\r\n          />\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Amount\"\r\n            value={this.state.amount}\r\n            onChange={this.onAmountChange}\r\n          />\r\n          <SingleDatePicker \r\n            date={this.state.createdAt}\r\n            onDateChange={this.onDateChange}\r\n            focused={this.state.focused}\r\n            onFocusChange={this.onFocusedChange}\r\n            numberOfMonths={1}\r\n            isOutsideRange={() => false}\r\n          />\r\n          <textarea\r\n            placeholder=\"Add a note for your expense.(optional)\"\r\n            value={this.state.note}\r\n            onChange={this.onNoteChange}\r\n          >\r\n          </textarea>\r\n          <button>Add Expense</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from './Form';\r\nimport { connect } from 'react-redux';\r\nimport { addExpense } from '../actions/expenses';\r\n\r\n\r\nconst Create = (props) => (\r\n  <div>\r\n    <h2>Create Page</h2>\r\n    <Form \r\n      onSubmit={(expense) => {\r\n        props.dispatch(addExpense(expense));\r\n        props.history.push('/');\r\n      }}\r\n    />\r\n  </div>\r\n)\r\n\r\n\r\nexport default connect()(Create);","import React, { Component } from 'react';\r\n\r\nclass Help extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Help Page</h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Form from './Form';\r\nimport { editExpense, removeExpense } from '../actions/expenses';\r\n\r\nconst Edit = (props) => {\r\n  return (\r\n    <div>\r\n      <Form \r\n        expense={props.expense}\r\n        onSubmit={(expense) => {\r\n          props.dispatch(editExpense(props.expense.id, expense));\r\n          props.history.push('/');\r\n        }}\r\n      />\r\n      <button onClick={() => {\r\n        props.dispatch(removeExpense(props.expense))\r\n        props.history.push('/');\r\n      }}>Remove</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    expense: state.expenses.find(\r\n      (expense) => expense.id === props.match.params.id\r\n    )}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Edit);","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    404!\r\n  </div>\r\n)\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1>Budget IO</h1>\r\n    <NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink>\r\n    <NavLink to=\"/create\" activeClassName=\"is-active\">Create</NavLink>\r\n    <NavLink to=\"/help\" activeClassName=\"is-active\">Help</NavLink>\r\n  </header>\r\n)\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Create from './components/Create';\r\nimport Help from './components/Help';\r\nimport Edit from './components/Edit';\r\nimport NotFound from './components/NotFound';\r\nimport Header from './components/Header';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/create\" component={Create} />\r\n          <Route path=\"/help\" component={Help} />\r\n          <Route path=\"/edit/:id\" component={Edit} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport storeSetup from './store/storeSetup';\r\nimport App from './App';\r\n\r\nimport './Styles/css/index.css';\r\nimport './index.css';\r\n\r\nconst store = storeSetup();\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App /> \r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));","import { createStore, combineReducers } from 'redux';\r\nimport expensesReducer from '../reducers/expense';\r\nimport filtersReducer from '../reducers/filters';\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            expenses: expensesReducer,\r\n            filters: filtersReducer\r\n        }),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ); \r\n\r\n    return store;\r\n}\r\n"],"sourceRoot":""}